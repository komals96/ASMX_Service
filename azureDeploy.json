{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "administratorLogin": {
            "type": "string"
        },
        "administratorLoginPassword": {
            "type": "securestring"
        },
        "collation": {
            "type": "string"
        },
        "databaseName": {
            "type": "string"
        },
        "tier": {
            "type": "string"
        },
        "skuName": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "maxSizeBytes": {
            "type": "int"
        },
        "serverName": {
            "type": "string"
        },
        "sampleName": {
            "type": "string",
            "defaultValue": ""
        },
        "zoneRedundant": {
            "type": "bool",
            "defaultValue": false
        },
        "licenseType": {
            "type": "string",
            "defaultValue": ""
        },
        "readScaleOut": {
            "type": "string",
            "defaultValue": "Disabled"
        },
        "numberOfReplicas": {
            "type": "int",
            "defaultValue": 0
        },
        "minCapacity": {
            "type": "string",
            "defaultValue": ""
        },
        "autoPauseDelay": {
            "type": "string",
            "defaultValue": ""
        },
        "enableADS": {
            "type": "bool",
            "defaultValue": false
        },
        "allowAzureIps": {
            "type": "bool",
            "defaultValue": true
        },
        "databaseTags": {
            "type": "object",
            "defaultValue": {}
        },
        "serverTags": {
            "type": "object",
            "defaultValue": {}
        },
        "enableVA": {
            "type": "bool",
            "defaultValue": false
        },
        "useVAManagedIdentity": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "To enable vulnerability assessments, the user deploying this template must have an administrator or owner permissions."
            }
        },
        "enablePrivateEndpoint": {
            "type": "bool",
            "defaultValue": false
        },
        "privateEndpointNestedTemplateId": {
            "type": "string",
            "defaultValue": ""
        },
        "privateEndpointSubscriptionId": {
            "type": "string",
            "defaultValue": ""
        },
        "privateEndpointResourceGroup": {
            "type": "string",
            "defaultValue": ""
        },
        "privateEndpointName": {
            "type": "string",
            "defaultValue": ""
        },
        "privateEndpointLocation": {
            "type": "string",
            "defaultValue": ""
        },
        "privateEndpointSubnetId": {
            "type": "string",
            "defaultValue": ""
        },
        "privateLinkServiceName": {
            "type": "string",
            "defaultValue": ""
        },
        "privateLinkServiceServiceId": {
            "type": "string",
            "defaultValue": ""
        },
        "privateEndpointVnetSubscriptionId": {
            "type": "string",
            "defaultValue": ""
        },
        "privateEndpointVnetResourceGroup": {
            "type": "string",
            "defaultValue": ""
        },
        "privateEndpointVnetName": {
            "type": "string",
            "defaultValue": ""
        },
        "privateEndpointSubnetName": {
            "type": "string",
            "defaultValue": ""
        },
        "enablePrivateDnsZone": {
            "type": "bool",
            "defaultValue": false
        },
        "privateLinkPrivateDnsZoneFQDN": {
            "type": "string",
            "defaultValue": ""
        },
        "privateEndpointDnsRecordUniqueId": {
            "type": "string",
            "defaultValue": ""
        },
        "privateEndpointTemplateLink": {
            "type": "string",
            "defaultValue": ""
        },
        "privateDnsForPrivateEndpointTemplateLink": {
            "type": "string",
            "defaultValue": ""
        },
        "privateDnsForPrivateEndpointNicTemplateLink": {
            "type": "string",
            "defaultValue": ""
        },
        "privateDnsForPrivateEndpointIpConfigTemplateLink": {
            "type": "string",
            "defaultValue": ""
        },
        "allowClientIp": {
            "type": "bool",
            "defaultValue": false
        },
        "clientIpRuleName": {
            "type": "string",
            "defaultValue": ""
        },
        "clientIpValue": {
            "type": "string",
            "defaultValue": ""
        },
		"subscriptionId": {
            "type": "String"
        },
        "name": {
            "type": "String"
        },
        "hostingEnvironment": {
            "type": "String"
        },
        "hostingPlanName": {
            "type": "String"
        },
        "serverFarmResourceGroup": {
            "type": "String"
        },
        "alwaysOn": {
            "type": "Bool"
        },
        "currentStack": {
            "type": "String"
        },
        "phpVersion": {
            "type": "String"
        },
        "errorLink": {
            "type": "String"
        },
		"sites_WebApi0606_name": {
            "defaultValue": "WebApi0606",
            "type": "String"
        },
        "serverfarms_ASP_RGMySQLPOC_aff0_externalid": {
            "defaultValue": "/subscriptions/8c615542-b27e-450a-aad4-c1ba2e5eaf62/resourceGroups/RG-MySQL-POC/providers/Microsoft.Web/serverfarms/ASP-RGMySQLPOC-aff0",
            "type": "String"
        }                  
    },
    "functions": [],
    "variables": { 
        "subscriptionId": "[subscription().subscriptionId]",
        "resourceGroupName": "[resourceGroup().name]",
        "uniqueStorage": "[uniqueString(variables('subscriptionId'), variables('resourceGroupName'), parameters('location'))]",
        "storageName": "[tolower(concat('sqlva', variables('uniqueStorage')))]",
        "privateEndpointContainerTemplateName": "[concat('PrivateEndpointContainer-', if(parameters('enablePrivateEndpoint'), parameters('privateEndpointNestedTemplateId'), ''))]",
        "subnetPoliciesTemplateName": "[concat('SubnetPolicies-', if(parameters('enablePrivateEndpoint'), parameters('privateEndpointNestedTemplateId'), ''))]",
        "privateEndpointTemplateName": "[concat('PrivateEndpoint-', if(parameters('enablePrivateEndpoint'), parameters('privateEndpointNestedTemplateId'), ''))]",
        "deploymentTemplateApi": "2018-05-01",
        "privateEndpointApi": "2019-04-01",
        "privateEndpointId": "[if(parameters('enablePrivateEndpoint'), resourceId(parameters('privateEndpointSubscriptionId'), parameters('privateEndpointResourceGroup'), 'Microsoft.Network/privateEndpoints', parameters('privateEndpointName')), '')]",
        "privateEndpointVnetId": "[if(parameters('enablePrivateEndpoint'), resourceId(parameters('privateEndpointVnetSubscriptionId'), parameters('privateEndpointVnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('privateEndpointVnetName')), '')]",
        "privateEndpointSubnetResourceId": "[if(parameters('enablePrivateEndpoint'), resourceId(parameters('privateEndpointVnetSubscriptionId'), parameters('privateEndpointVnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('privateEndpointVnetName'), parameters('privateEndpointSubnetName')), '')]",
        "uniqueRoleGuid": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), variables('storageBlobContributor'), resourceId('Microsoft.Sql/servers', parameters('serverName')))]",
        "StorageBlobContributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]"
    },
    "resources": [
    {
	    "resources":[{
		    "condition": "[parameters('enableVA')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('storageName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "resources": [
                {
                    "condition": "[parameters('useVAManagedIdentity')]",
                    "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                    "apiVersion": "2018-09-01-preview",
                    "name": "[concat(variables('storageName'), '/Microsoft.Authorization/', variables('uniqueRoleGuid') )]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
                    ],
                    "properties": {
                        "roleDefinitionId": "[variables('StorageBlobContributor')]",
                        "principalId": "[reference(resourceId('Microsoft.Sql/servers', parameters('serverName')), '2018-06-01-preview', 'Full').identity.principalId]",
                        "scope": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
                        "principalType": "ServicePrincipal"
                    }
                }
            ]},
            {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Sql/servers",
            "location": "[parameters('location')]",
            "tags": "[parameters('serverTags')]",
            "name": "[parameters('serverName')]",
            "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "version": "12.0"
            },
            "identity": "[if(and(parameters('enableVA'),parameters('useVAManagedIdentity')), json('{\"type\":\"SystemAssigned\"}'), json('null'))]",
            "resources": [
                {
                    "apiVersion": "2017-10-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                    ],
                    "location": "[parameters('location')]",
                    "tags": "[parameters('databaseTags')]",
                    "name": "[parameters('databaseName')]",
                    "properties": {
                        "collation": "[parameters('collation')]",
                        "maxSizeBytes": "[parameters('maxSizeBytes')]",
                        "sampleName": "[parameters('sampleName')]",
                        "zoneRedundant": "[parameters('zoneRedundant')]",
                        "licenseType": "[parameters('licenseType')]",
                        "readScale": "[parameters('readScaleOut')]",
                        "readReplicaCount": "[parameters('numberOfReplicas')]",
                        "minCapacity": "[parameters('minCapacity')]",
                        "autoPauseDelay": "[parameters('autoPauseDelay')]"
                    },
                    "sku": {
                        "name": "[parameters('skuName')]",
                        "tier": "[parameters('tier')]"
                    },
                    "type": "databases"
                },
                {
                    "condition": "[parameters('allowAzureIps')]",
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    },
                    "type": "firewallrules"
                },
                {
                    "condition": "[parameters('allowClientIp')]",
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "[parameters('clientIpRuleName')]",
                    "properties": {
                        "endIpAddress": "[parameters('clientIpValue')]",
                        "startIpAddress": "[parameters('clientIpValue')]"
                    },
                    "type": "firewallrules"
                },
                {
                    "condition": "[parameters('enableADS')]",
                    "apiVersion": "2017-03-01-preview",
                    "type": "securityAlertPolicies",
                    "name": "Default",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/databases/', parameters('databaseName'))]"
                    ],
                    "properties": {
                        "state": "Enabled",
                        "disabledAlerts": [],
                        "emailAddresses": [],
                        "emailAccountAdmins": true
                    }
                },
                {
                    "condition": "[parameters('enableVA')]",
                    "apiVersion": "2018-06-01-preview",
                    "type": "vulnerabilityAssessments",
                    "name": "Default",
                    "properties": {
                        "storageContainerPath": "[if(parameters('enableVA'), concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))).primaryEndpoints.blob, 'vulnerability-assessment'), '')]",
                        "storageAccountAccessKey": "[if(and(parameters('enableVA'),not(parameters('useVAManagedIdentity'))), listKeys(variables('storageName'), '2018-02-01').keys[0].value, '')]",
                        "recurringScans": {
                            "isEnabled": true,
                            "emailSubscriptionAdmins": true,
                            "emails": []
                        }
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/securityAlertPolicies/Default')]"
                    ]
                }
            ]
        },
        {
            "condition": "[parameters('enablePrivateEndpoint')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentTemplateApi')]",
            "name": "[variables('subnetPoliciesTemplateName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "apiVersion": "[variables('privateEndpointApi')]",
                            "name": "[concat(parameters('privateEndpointVnetName'), '/', parameters('privateEndpointSubnetName'))]",
                            "location": "[parameters('privateEndpointLocation')]",
                            "properties": {
                                "privateEndpointNetworkPolicies": "Disabled"
                            },
                            "type": "Microsoft.Network/virtualNetworks/subnets"
                        }
                    ]
                }
            },
            "subscriptionId": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointVnetSubscriptionId'), variables('subscriptionId'))]",
            "resourceGroup": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointVnetResourceGroup'), variables('resourceGroupName'))]"
        },
        {
            "condition": "[parameters('enablePrivateEndpoint')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentTemplateApi')]",
            "name": "[variables('privateEndpointTemplateName')]",
            "dependsOn": [
                "[resourceId(variables('subscriptionId'), variables('resourceGroupName'), 'Microsoft.Sql/servers/databases/', parameters('serverName'), parameters('databaseName'))]",
                "[variables('subnetPoliciesTemplateName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateEndpointName": {
                        "value": "[parameters('privateEndpointName')]"
                    },
                    "privateEndpointConnectionId": {
                        "value": ""
                    },
                    "privateEndpointConnectionName": {
                        "value": "[parameters('privateLinkServiceName')]"
                    },
                    "privateEndpointId": {
                        "value": "[variables('privateEndpointId')]"
                    },
                    "privateEndpointApiVersion": {
                        "value": "[variables('privateEndpointApi')]"
                    },
                    "privateLinkServiceId": {
                        "value": "[parameters('privateLinkServiceServiceId')]"
                    },
                    "groupId": {
                        "value": "SqlServer"
                    },
                    "subnetId": {
                        "value": "[variables('privateEndpointSubnetResourceId')]"
                    },
                    "location": {
                        "value": "[parameters('privateEndpointLocation')]"
                    },
                    "tags": {
                        "value": {}
                    }
                },
                "templatelink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[parameters('privateEndpointTemplateLink')]"
                }
            },
            "subscriptionId": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointSubscriptionId'), variables('subscriptionId'))]",
            "resourceGroup": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointResourceGroup'), variables('resourceGroupName'))]"
        },
        {
            "condition": "[and(parameters('enablePrivateEndpoint'), parameters('enablePrivateDnsZone'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentTemplateApi')]",
            "name": "[concat('PrivateDns-', parameters('privateEndpointNestedTemplateId'))]",
            "dependsOn": [
                "[variables('privateEndpointTemplateName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/privateDnsZones",
                            "apiVersion": "2018-09-01",
                            "name": "[parameters('privateLinkPrivateDnsZoneFQDN')]",
                            "location": "global",
                            "tags": {},
                            "properties": {}
                        },
                        {
                            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                            "apiVersion": "2018-09-01",
                            "name": "[concat(parameters('privateLinkPrivateDnsZoneFQDN'), '/', uniqueString(variables('privateEndpointVnetId')))]",
                            "location": "global",
                            "dependsOn": [
                                "[parameters('privateLinkPrivateDnsZoneFQDN')]"
                            ],
                            "properties": {
                                "virtualNetwork": {
                                    "id": "[variables('privateEndpointVnetId')]"
                                },
                                "registrationEnabled": false
                            }
                        },
                        {
                            "apiVersion": "[variables('deploymentTemplateApi')]",
                            "name": "[concat('EndpointDnsRecords-', parameters('privateEndpointDnsRecordUniqueId'))]",
                            "type": "Microsoft.Resources/deployments",
                            "dependsOn": [
                                "[parameters('privateLinkPrivateDnsZoneFQDN')]"
                            ],
                            "properties": {
                                "mode": "Incremental",
                                "templatelink": {
                                    "contentVersion": "1.0.0.0",
                                    "uri": "[parameters('privateDnsForPrivateEndpointTemplateLink')]"
                                },
                                "parameters": {
                                    "privateDnsName": {
                                        "value": "[parameters('privateLinkPrivateDnsZoneFQDN')]"
                                    },
                                    "privateEndpointNicResourceId": {
                                        "value": "[if(parameters('enablePrivateEndpoint'), reference(concat('Microsoft.Resources/deployments/', variables('privateEndpointTemplateName'))).outputs.networkInterfaceId.value, '')]"
                                    },
                                    "nicRecordsTemplateUri": {
                                        "value": "[parameters('privateDnsForPrivateEndpointNicTemplateLink')]"
                                    },
                                    "ipConfigRecordsTemplateUri": {
                                        "value": "[parameters('privateDnsForPrivateEndpointIpConfigTemplateLink')]"
                                    },
                                    "uniqueId": {
                                        "value": "[parameters('privateEndpointDnsRecordUniqueId')]"
                                    },
                                    "existingRecords": {
                                        "value": {}
                                    }
                                }
                            }
                        }
                    ]
                }
            },
            "subscriptionId": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointVnetSubscriptionId'), variables('subscriptionId'))]",
            "resourceGroup": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointVnetResourceGroup'), variables('resourceGroupName'))]"
		}],
		"resources1":[{
		    "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "microsoft.insights/components/SampleWebApp0606"
            ],
            "tags": {},
            "properties": {
                "name": "[parameters('name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference('microsoft.insights/components/SampleWebApp0606', '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference('microsoft.insights/components/SampleWebApp0606', '2015-05-01').ConnectionString]"
                        },
                        {
                            "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "XDT_MicrosoftApplicationInsights_Mode",
                            "value": "default"
                        },
                        {
                            "name": "ANCM_ADDITIONAL_ERROR_PAGE_LINK",
                            "value": "[parameters('errorLink')]"
                        }
                    ],
                    "metadata": [
                        {
                            "name": "CURRENT_STACK",
                            "value": "[parameters('currentStack')]"
                        }
                    ],
                    "phpVersion": "[parameters('phpVersion')]",
                    "alwaysOn": "[parameters('alwaysOn')]"
                },
                "serverFarmId": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "hostingEnvironment": "[parameters('hostingEnvironment')]",
                "clientAffinityEnabled": true
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "name": "SampleWebApp0606",
            "location": "northeurope",
            "tags": {},
            "properties": {
                "ApplicationId": "[parameters('name')]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
		}],
		"resources2":[{
		    "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_WebApi0606_name')]",
            "location": "North Europe",
            "kind": "api",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "webapi0606.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "webapi0606.scm.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[parameters('serverfarms_ASP_RGMySQLPOC_aff0_externalid')]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_WebApi0606_name'), '/web')]",
            "location": "North Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebApi0606_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$WebApi0606",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_WebApi0606_name'), '/', parameters('sites_WebApi0606_name'), '.azurewebsites.net')]",
            "location": "North Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebApi0606_name'))]"
            ],
            "properties": {
                "siteName": "WebApi0606",
                "hostNameType": "Verified"
            }

		}]
	}
],
    "outputs": {}
}
